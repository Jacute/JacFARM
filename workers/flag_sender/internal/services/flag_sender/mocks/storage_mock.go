// Code generated by MockGen. DO NOT EDIT.
// Source: service.go
//
// Generated by this command:
//
//	mockgen -source=service.go -destination=./mocks/storage_mock.go -package=mocks -mock_names=storage=StorageMock storage
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	models "flag_sender/internal/models"
	plugins "flag_sender/pkg/plugins"
	reflect "reflect"
	time "time"

	gomock "go.uber.org/mock/gomock"
)

// StorageMock is a mock of storage interface.
type StorageMock struct {
	ctrl     *gomock.Controller
	recorder *StorageMockMockRecorder
	isgomock struct{}
}

// StorageMockMockRecorder is the mock recorder for StorageMock.
type StorageMockMockRecorder struct {
	mock *StorageMock
}

// NewStorageMock creates a new mock instance.
func NewStorageMock(ctrl *gomock.Controller) *StorageMock {
	mock := &StorageMock{ctrl: ctrl}
	mock.recorder = &StorageMockMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *StorageMock) EXPECT() *StorageMockMockRecorder {
	return m.recorder
}

// GetConfigParameter mocks base method.
func (m *StorageMock) GetConfigParameter(ctx context.Context, key string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetConfigParameter", ctx, key)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetConfigParameter indicates an expected call of GetConfigParameter.
func (mr *StorageMockMockRecorder) GetConfigParameter(ctx, key any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetConfigParameter", reflect.TypeOf((*StorageMock)(nil).GetConfigParameter), ctx, key)
}

// GetFlagValuesByStatus mocks base method.
func (m *StorageMock) GetFlagValuesByStatus(ctx context.Context, status models.FlagStatus) ([]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFlagValuesByStatus", ctx, status)
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetFlagValuesByStatus indicates an expected call of GetFlagValuesByStatus.
func (mr *StorageMockMockRecorder) GetFlagValuesByStatus(ctx, status any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFlagValuesByStatus", reflect.TypeOf((*StorageMock)(nil).GetFlagValuesByStatus), ctx, status)
}

// UpdateFlagByResult mocks base method.
func (m *StorageMock) UpdateFlagByResult(ctx context.Context, flag string, result *plugins.FlagResult) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateFlagByResult", ctx, flag, result)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateFlagByResult indicates an expected call of UpdateFlagByResult.
func (mr *StorageMockMockRecorder) UpdateFlagByResult(ctx, flag, result any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateFlagByResult", reflect.TypeOf((*StorageMock)(nil).UpdateFlagByResult), ctx, flag, result)
}

// UpdateStatusForOldFlags mocks base method.
func (m *StorageMock) UpdateStatusForOldFlags(ctx context.Context, flagTTL time.Duration) (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateStatusForOldFlags", ctx, flagTTL)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateStatusForOldFlags indicates an expected call of UpdateStatusForOldFlags.
func (mr *StorageMockMockRecorder) UpdateStatusForOldFlags(ctx, flagTTL any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateStatusForOldFlags", reflect.TypeOf((*StorageMock)(nil).UpdateStatusForOldFlags), ctx, flagTTL)
}
