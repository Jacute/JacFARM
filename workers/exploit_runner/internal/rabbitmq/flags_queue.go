package rabbitmq

import (
	"crypto/md5"
	"encoding/hex"
	"exploit_runner/pkg/rabbitmq_dto"

	"github.com/bytedance/sonic"
	amqp "github.com/rabbitmq/amqp091-go"
)

func (r *Rabbit) PublishFlag(flag *rabbitmq_dto.Flag) error {
	output, err := sonic.Marshal(flag)
	if err != nil {
		return err
	}

	h := md5.New()
	h.Write([]byte(flag.Value))
	msgID := hex.EncodeToString(h.Sum(nil))

	err = r.writeCh.Publish(
		"",
		flagsQueueName,
		false,
		false,
		amqp.Publishing{
			DeliveryMode: amqp.Persistent,
			ContentType:  "application/json",
			Body:         output,
			Headers: amqp.Table{
				"x-deduplication-header": msgID,
			},
		},
	)
	if err != nil {
		return err
	}
	return nil
}
