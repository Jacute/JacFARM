services:
  db:
    hostname: db
    image: postgres:17.5
    restart: on-failure
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=jacfarm
    ports:
      - 127.0.0.1:5432:5432
    volumes:
      - ./volumes/postgres:/var/lib/postgresql/data
      - ./migrations/001_create_schema.up.sql:/docker-entrypoint-initdb.d/001_init_tables.sql:ro
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres", "-d", "jacfarm", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
  flag_queue:
    hostname: flag_queue
    image: rabbitmq:4.1.2
    restart: on-failure
    environment:
      - RABBITMQ_DEFAULT_USER=rmuser
      - RABBITMQ_DEFAULT_PASS=rmpassword
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit log_levels [{connection,error},{default,error}] disk_free_limit 2147483648
    ports:
      - 5672:5672
    volumes:
      - ./volumes/rabbitmq:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
  config_loader:
    build:
      context: ./workers/config_loader
      dockerfile: ../../docker/Dockerfile.config_loader
    restart: no
    environment:
      - PG_USERNAME=postgres
      - PG_PASSWORD=postgres
      - PG_DB_NAME=jacfarm
      - PG_HOST=db
      - PG_PORT=5432
      - CONFIG_PATH=/app/config.yml
    volumes:
      - ./config.yml:/app/config.yml
    depends_on:
      db:
        condition: service_healthy
  exploit_runner:
    build:
      context: ./workers/exploit_runner
      dockerfile: ../../docker/Dockerfile.exploit_runner
    restart: on-failure
    environment:
      - PG_USERNAME=postgres
      - PG_PASSWORD=postgres
      - PG_DB_NAME=jacfarm
      - PG_HOST=db
      - PG_PORT=5432
      - RABBITMQ_HOST=flag_queue
      - RABBITMQ_PORT=5672
      - RABBITMQ_USERNAME=rmuser
      - RABBITMQ_PASSWORD=rmpassword
      - EXPLOIT_DIR=/app/exploits
    volumes:
      - ./volumes/exploits:/app/exploits
    depends_on:
      db:
        condition: service_healthy
      flag_queue:
        condition: service_healthy
      config_loader:
        condition: service_completed_successfully
  flag_sender:
    build:
      context: ./workers/flag_sender
      dockerfile: ../../docker/Dockerfile.flag_sender
    restart: on-failure
    environment:
      - PG_USERNAME=postgres
      - PG_PASSWORD=postgres
      - PG_DB_NAME=jacfarm
      - PG_HOST=db
      - PG_PORT=5432
      - RABBITMQ_HOST=flag_queue
      - RABBITMQ_PORT=5672
      - RABBITMQ_USERNAME=rmuser
      - RABBITMQ_PASSWORD=rmpassword
      - PLUGIN_DIR=/app/plugins
      - ENV=prod
    depends_on:
      db:
        condition: service_healthy
      flag_queue:
        condition: service_healthy
      config_loader:
        condition: service_completed_successfully    
  jacfarm_api:
    build:
      context: ./jacfarm-api
      dockerfile: ../docker/Dockerfile.jacfarm-api
    restart: on-failure
    environment:
      - PG_USERNAME=postgres
      - PG_PASSWORD=postgres
      - PG_DB_NAME=jacfarm
      - PG_HOST=db
      - PG_PORT=5432
      - RABBITMQ_HOST=flag_queue
      - RABBITMQ_PORT=5672
      - RABBITMQ_USERNAME=rmuser
      - RABBITMQ_PASSWORD=rmpassword
      - HTTP_HOST=0.0.0.0
      - HTTP_PORT=1337
      - HTTP_READ_TIMEOUT=10s
      - HTTP_WRITE_TIMEOUT=10s
      - HTTP_IDLE_TIMEOUT=60s
      - HTTP_CORS_ALLOWED_ORIGINS=http://127.0.0.1:1337,http://localhost:1337
      - ENV=prod
    ports:
      - 1337:1337
    depends_on:
      db:
        condition: service_healthy
      flag_queue:
        condition: service_healthy
