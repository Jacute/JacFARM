package handlers

import (
	"JacFARM/internal/http/dto"
	"JacFARM/internal/storage"
	"errors"

	"github.com/gofiber/fiber/v3"
	"github.com/google/uuid"
)

func (h *Handlers) ListExploits() func(c fiber.Ctx) error {
	return func(c fiber.Ctx) error {
		filter, err := dto.MapQueryToGetExploitsFilter(c.Queries())
		if err != nil {
			return c.JSON(dto.Error(err.Error()))
		}

		exploits, err := h.service.ListExploits(c.RequestCtx(), filter)
		if err != nil {
			return c.JSON(dto.ErrInternal)
		}

		return c.JSON(dto.ListExploitsResponse{
			Response: dto.OK(),
			Exploits: exploits,
		})
	}
}

func (h *Handlers) UploadExploit() func(c fiber.Ctx) error {
	return func(c fiber.Ctx) error {
		panic("not implemented")
	}
}

func (h *Handlers) ToggleExploit() func(c fiber.Ctx) error {
	return func(c fiber.Ctx) error {
		id := c.Params("id")
		_, err := uuid.Parse(id)
		if err != nil {
			return c.JSON(dto.Error("id should be uuid"))
		}

		isRunning, err := h.service.ToggleExploit(c.RequestCtx(), id)
		if err != nil {
			if errors.Is(err, storage.ErrExploitNotFound) {
				return c.JSON(dto.Error(err.Error()))
			}
			return c.JSON(dto.ErrInternal)
		}

		return c.JSON(dto.ToggleExploitResponse{
			Response:  dto.OK(),
			IsRunning: isRunning,
		})
	}
}
